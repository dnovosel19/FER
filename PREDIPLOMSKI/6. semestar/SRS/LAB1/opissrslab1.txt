Pri koristenju sustava za pohranu lozinki koristi se komunikacija putem komandne linije. Pri svakoj komunikaciji se zahtjeva od korisnika da zna koje tocno naredbe su dozvoljene i zahtjevane. Moze koristiti jedino naredbe get, put i init te je uvijek zahtjevano da se unese master password. 

Prvo se generira 16 nasumicnih bitova koji predstavljaju salt koja se koristi za generiranje trenutnog kljuƒça. Zatim se na isti nacin kao i salt generiraju nonce i data koji sluze za generiranje cipher, ciphertexta i tag. Salt, nonce, tag i ciphertext cemo spremati svaki u zasebni txt file koji sluzi samo za iduce naredbe komandne linije. Za get i put se koriste dohvacene vrijednosti tih varijabla kako bi se provjerilo da je unesen dobar master password. Te vrijednosti ce se svakim pozivom i zavrsetkom programa promjeniti kako napadac nebi nikada otkrio neki pattern kojim bi mogao razbiti nas sigurnosni sustav. Ako je master password korektan onda se obavlja zadana funkcionalnost i pretraga adresa. Ako je naredba put u pitanju onda ce se dogoditi slijedece: ili ce se za postojucu adresu zapisati novounesena lozinka ili adresa nece postojati pa ce se par adresa, lozinka zapisati u bazu. Ukoliko je naredba get onda ce se traziti adresa u bazi podataka te ce se vratiti lozinka, a ukoliko adresa ne postoji onda ce se javiti korisniku da ne postoji. Kada se izvrsi opet inicijalizacija baze onda se trenutna baza sa svim trenutnim podacima brise. 
Povjerljivost: koristen je AES za enkripciju, PBKDF2 sprjecava brute force. Povjerljivost adresa: enkripcija adresa, provjera master passworda, nadostupnost kljuca. Integritet adresa i zaporki: encrypt_and_digest uz tekst generira se MAC.

Za pisanje koda koristen je programski jezik Python te za sve funkcionalnosti vezane za sigurnost koristena je biblioteka pycryptodome.
 

